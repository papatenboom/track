@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div class="col-12">

        <!-- Manage Datasets Tab -->
        <ul class="nav nav-tabs">
            <li class="nav-item mr-2">
                <select id="datasetSelect" class="form-control selectpicker">
                    @foreach (var label in (Dictionary<int, string>)Model)
                    {
                        <option value="@label.Key" @(label.Key.ToString() == (string)ViewData["lastId"] ? "selected=\"selected\"" : "")>@label.Value</option>
                    }
                </select>
            </li>
            <li class="nav-item mr-auto">
                <a class="nav-link" href="#tab-add">
                    <i class="fas fa-plus"></i>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#tab-chart">Cancel</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#tab-chart">Save</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#tab-settings">Edit</a>
            </li>
        </ul>
    </div>
</div>
<div id="tab-chart" class="active">
    <div class="row">

        <div class="order-2 col-12 col-md-4 col-lg-3 order-lg-1">

            <div class="form-bottom">
                <h5><a data-toggle="collapse" href="#createRecord">Create Record</a></h5>
                <form id="createRecord" class="collapse show">

                    <!-- Property Inputs -->
                    <div class="form-props"></div>

                    <!-- DateTime Select -->
                    <div class="form-group">
                        <label>Date</label>
                        <input type="text" class="form-control" id="datetimeSelect">
                    </div>

                    <!-- Note Textarea -->
                    <div class="form-group">
                        <label>Note</label>
                        <textarea class="form-control" id="noteTextarea" rows="2"></textarea>
                    </div>

                    <button type="button" id="addRecord" class="btn btn-primary">Add</button>
                </form>

            </div>

        </div>
        <div class="order-1 col-lg-9 order-md-1 order-lg-2">

            <div class="wrap">
                <svg id="chart-labels"><g></g></svg>
                <div class="scroll dragscroll">
                    <div class="ct-chart">
                    </div>

                </div>
            </div>

        </div>

    </div>

</div>
<div id="tab-add">
    <div class="row">
        <div class="col-12">

            <h4>Create Dataset</h4>
            <form id="createDataset">

                <div class="form-row mb-3">
                    <div class="col-12 col-sm-6">
                        <input type="text" class="form-control" id="datasetLabel" placeholder="Label">
                    </div>
                </div>
                <h5>Properties</h5>
                <div class="form-props">
                    <div class="form-row mb-3 init">
                        <div class="col-6 col-md-4">
                            <input type="text" class="form-control" id="label-1" placeholder="Label">
                        </div>
                        <div class="col-5 col-md-3">
                            <select class="form-control" id="type-1">
                                <option>Integer</option>
                                <option>Decimal</option>
                            </select>
                        </div>
                        <div class="col-1">
                            <button type="button" class="btn btn-link remove">
                                <i class="fas fa-times-circle"></i>
                            </button>
                        </div>
                        <!--
    <div class="col-3">
        <div class="dropdown">
            <button class="btn btn-outline dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Integer
            </button>
            <div class="dropdown-menu">
                <a class="dropdown-item" href="#">Integer</a>
                <a class="dropdown-item" href="#">Decimal</a>
            </div>
        </div>
    </div>
        <div class="col-3">
            <div class="btn-group">
                <input type="text" class="btn btn-outline w-100" placeholder="Units"  id="units-1" />
                <button type="button" class="btn btn-outline dropdown-toggle dropdown-toggle-split" data-toggle="dropdown">
                    <span class="sr-only">Toggle Dropdown</span>
                </button>
                <div class="dropdown-menu">
                    <h6 class="dropdown-header">Weight</h6>
                    <a class="dropdown-item" href="#">Pounds (lbs)</a>
                    <a class="dropdown-item" href="#">Grams (g)</a>
                    <div class="dropdown-divider"></div>
                    <h6 class="dropdown-header">Time</h6>
                    <a class="dropdown-item" href="#">Hours</a>
                    <a class="dropdown-item" href="#">Minutes</a>
                    <div class="dropdown-divider"></div>
                    <h6 class="dropdown-header">Misc</h6>
                    <a class="dropdown-item" href="#">Dollars ($)</a>
                    <a class="dropdown-item" href="#">Reps</a>
                </div>
            </div>
        </div>
    -->
                    </div>
                </div>

                <style>
                    /* TODO */
                    
                    .dropdown-menu.show {
                        transform: translate3d(0px, 38px, 0px) !important;
                    }
                </style>
                <input type="button" class="btn btn-secondary" id="addProperty" value="Add Property" />

            </form>

        </div>

    </div>

</div>
<div id="tab-settings">
    <div class="row">
        <div class="col-12">

            <h5>Settings</h5>
            <form id="settings">

            </form>
        </div>
    </div>
</div>

<script>


    var chart;

    // Initialize page ----------------------------------------------------
    $('#datasetSelect').focus();

    $('#datetimeSelect').datetimepicker();
    
    $('#datetimeSelect').val(moment(new Date()).format("MM/DD/YYYY h:mm A"));
    refreshTime();

    $('.nav-link:contains(Cancel)').hide();
    $('.nav-link:contains(Save)').hide();
    $('.nav-link:contains(Edit)').hide();

    var chart;

    
    $.get('@Url.Action("GetDataset", "Home")/' + $('#datasetSelect').val(), function (data)
    {
        refreshForm(JSON.parse(data));
        refreshChart(JSON.parse(data), '.ct-chart');

    });

    $(function () {

        // Tabs -------------------------------------------------------------
        // Hide inactive tabs
        $.each($('[id^=tab]:not(.active)'), function (index, value) {
            $(value).hide();
        });
        

        // Swap current displayed tab
        $('.nav .nav-item').click(function (e) {
            e.preventDefault();

            var link = $('.nav-link', e.currentTarget);
            var nextTab = $(link).attr('href');

            var currentTab = $('[id^=tab].active').first();

            // Save
            if (e.target.innerHTML == 'Save') {

                var datasetLabel = $('#datasetLabel').val();

                var propLabels = [];
                var propTypes = [];

                $.each($('input[id^=label]'), function (index, value) {
                    propLabels.push($(value).val());
                });
                $.each($('select[id^=type]'), function (index, value) {
                    propTypes.push($(value).val());
                });

                var data = {
                    datasetLabel: datasetLabel,
                    labels: propLabels,
                    types: propTypes
                };
                
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("CreateDataset", "Home")',
                    traditional: true,
                    data: data
                });

            } else 

            if ($(link).length) {

                // if (('#' + $(currentTab).attr('id')) != nextTab) {
                $('.nav-link.active').removeClass('active');
                $(currentTab).hide();
                $(currentTab).removeClass('active');

                $(link).addClass('active');
                $(nextTab).show();
                $(nextTab).addClass('active');
                //}

                $(nextTab).show();

                // 
                if (nextTab == '#tab-add' || nextTab == '#tab-settings') {
                    if (nextTab == '#tab-add') {
                        $('#datasetSelect').attr('disabled', true);
                        $('.nav-link:contains(Edit)').hide();
                    }
                    $('.nav-link:contains(Cancel)').show();
                    $('.nav-link:contains(Save)').show();

                } else {
                    $('.nav-link:contains(Cancel)').hide();
                    $('.nav-link:contains(Save)').hide();
                    $('#datasetSelect').attr('disabled', false);
                }
            }
        });

        // Create Dataset ---------------------------------------------------
        $('#addProperty').click(function (e) {

            var clone = $('.form-row.init').last().clone();

            // Increment clone input ids
            var lastId = $('[id^=label]').attr('id');
            var id = lastId.substr(lastId.length - 1);
            var nextId = parseInt(id) + 1;
            $('[id^=label]', clone).attr('id', 'label-' + nextId);
            $('[id^=label]', clone).val('');

            lastId = $('[id^=type]').attr('id');
            id = lastId.substr(lastId.length - 1);
            nextId = parseInt(id) + 1;
            $('[id^=type]', clone).attr('id', 'type-' + nextId);


            
            $('button.remove', clone).click(function (e) {
                // TODO - fix this crap
                if ($(e.target).parent().parent().hasClass('form-row')) {
                    $(e.target).parent().parent().remove();
                } else if ($(e.target).parent().parent().parent().hasClass('form-row')) {
                    $(e.target).parent().parent().parent().remove();
                }
            });

            $('#createDataset .form-props').append(clone);
        });

        $('.dropdown-toggle').dropdown();

        $('.dropdown-item').click(function (e) {
            var base = $(e.target).parent().parent();

            if ($('input[type=text]', base).length) {
                $('input[type=text]', base).val($(e.target).html());
            } else {
                $('.dropdown-toggle', base).html($(e.target).html());
            }
            
        });

    })

    // TODO: Make so left & right on dropdown scroll chart horizontally




    // Events --------------------------------------------------------------

    // Dataset Select - On Change
    $('#datasetSelect').change(function (e) {
        $.get('@Url.Action("GetDataset", "Home")/' + $('#datasetSelect').val(), function (data)
        {
            refreshForm(JSON.parse(data));
            refreshChart(JSON.parse(data), '.ct-chart');

        });
    });

    // Create Record
    $('#addRecord').click(function (e)
    {
        var datasetId = $('#datasetSelect').val();
        var datetime = $('#datetimeSelect').val();
        var labels = [];
        var values = [];

        // Use current time is input in unchanged
        var now = new Date();
        if (datetime == moment(now).format("MM/DD/YYYY h:mm A")) {
            datetime = moment(now).format("MM/DD/YYYY hh:mm:ss a");
        }

        var formProps = $('.form-props .form-group');

        for (var i = 0; i < formProps.length; i++) {
            var label = $('label', formProps[i]).html();
            var value = $('.form-control', formProps[i]).val();
            $('.form-control', formProps[i]).val('');

            labels.push(label);
            values.push(value);
        }

        var note = $('#noteTextarea').val();

        var data = {
            "id": datasetId,
            "datetime": datetime,
            "labels": labels,
            "values": values,
            "note": note
        };

        $.ajax({
            type: 'POST',
            url: '@Url.Action("SaveRecord", "Home")',
            traditional: true,
            data: data
        })
            .done(function (data) {

                $.get('@Url.Action("GetDataset", "Home")/' + $('#datasetSelect').val(), function (data)
                {
                    refreshChart(JSON.parse(data), '.ct-chart');
                });
            });
    });

    $('#manageDatasets').click(function (e) {
        //$('.multi-collapse').hasClass('show') ? $('.form-top').removeClass('show') : $('.form-top').addClass('show');
    });


    function refreshTime() {

        var now = moment(new Date()).format("MM/DD/YYYY h:mm A");
        
        if ($('#datetimeSelect').val() != now) {
            $('#datetimeSelect').val(now);
        }


        var t = setTimeout(refreshTime, 1000);
    }

    function refreshForm(dataset) {

        var fieldsetHtml = '';

        for (var i = 0; i < dataset.series.length; i++) {

            // Add series field
            fieldsetHtml += '<div class="form-group"><label>' + dataset.series[i] + '</label><input type="text" class="form-control" id="prop-' + i + '"></div>';
        }

        $('#createRecord .form-props').html(fieldsetHtml);
    }

    // Draw new chart
    function refreshChart(dataset, selecter) {

        // Create Chartist data object
        var data = {
            //labels: []
            series: []
        }

        // Chartist data
        if (dataset != null) {

            // Populate first data object
            for (var i = 0; i < dataset.series.length; i++) {

                data.series.push({
                    name: dataset.series[i],
                    data: []
                });

                for (var j = 0; j < dataset.records.length; j++) {

                    data.series[i].data.push({
                        x: new Date(dataset.records[j]),
                        y: dataset[dataset.series[i]][j]
                    });

                }
            }
        }

        // Chartist options
        var options = {
            axisX: {
                type: Chartist.FixedScaleAxis,
                divisor: Math.round(Math.max(1, parseInt(dataset.span) / 30)),
                labelInterpolationFnc: function (value) {
                    return moment(value).format('MMM');
                }
            },
            fullWidth: true,
            chartPadding: {
                left: 0,
                //right: 20
            }
        };


        // Resize Chart
        var span = parseInt(dataset.span);

        //console.log("span: " + span + "; w: " + span * 3.5 + "; d:" + Math.max(1, span / 30));

        if (span) {
            if (span * 2 < $('.scroll')[0].clientWidth) {
                $('.ct-chart').css('width', span * 3.5);
            } else {
                $('.ct-chart').css('width', span * 2);
            }
        } else {
            $('.ct-chart').css('width', $('.scroll')[0].clientWidth);
        }

        // Render new graph
        if (!chart) {
            chart = new Chartist.Line(selecter, data, options);
        } else {
            chart.update(data, options);
        }
        
        // Move vertical labels
        $.each($('#chart-labels g').children(), function (i, val) {
            $(val).remove();
        })
        checkLabels()

        // Scroll chart to right edge
        $('.scroll')[0].scrollLeft = $('.scroll')[0].scrollWidth - $('.scroll')[0].clientWidth;
    }


    // Check is vertical Chart labels have appeared
    function checkLabels() {

        var vertLabels = $('.ct-start').parent();
        $.each($(vertLabels), function (id, value) {
            $(value).attr('y', parseInt($(value).attr('y')) + 20);
        });

        if (!vertLabels.length) {
            setTimeout(checkLabels, 100);
        } else {
            $('#chart-labels g').append($(vertLabels));
        }
    }

</script>
